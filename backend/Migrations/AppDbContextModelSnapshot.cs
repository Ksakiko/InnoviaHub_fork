// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Models;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 729, DateTimeKind.Local).AddTicks(2250),
                            EndTime = new DateTime(2025, 9, 9, 13, 34, 44, 729, DateTimeKind.Local).AddTicks(2700),
                            ResourceId = 1,
                            StartTime = new DateTime(2025, 9, 9, 12, 34, 44, 729, DateTimeKind.Local).AddTicks(2570),
                            Status = "Confirmed",
                            UserId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 729, DateTimeKind.Local).AddTicks(2890),
                            EndTime = new DateTime(2025, 9, 9, 15, 34, 44, 729, DateTimeKind.Local).AddTicks(2900),
                            ResourceId = 3,
                            StartTime = new DateTime(2025, 9, 9, 14, 34, 44, 729, DateTimeKind.Local).AddTicks(2890),
                            Status = "Confirmed",
                            UserId = new Guid("22222222-2222-2222-2222-222222222222")
                        });
                });

            modelBuilder.Entity("backend.Models.Entities.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ResourceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceTypeId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 729, DateTimeKind.Local).AddTicks(1740),
                            Name = "Skrivbord 1",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 729, DateTimeKind.Local).AddTicks(2050),
                            Name = "Skrivbord 2",
                            ResourceTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 729, DateTimeKind.Local).AddTicks(2050),
                            Name = "Mötesrum 1",
                            ResourceTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 729, DateTimeKind.Local).AddTicks(2050),
                            Name = "Mötesrum 2",
                            ResourceTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 729, DateTimeKind.Local).AddTicks(2050),
                            Name = "VR-glasögon 1",
                            ResourceTypeId = 3
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 729, DateTimeKind.Local).AddTicks(2050),
                            Name = "AI-server 1",
                            ResourceTypeId = 4
                        });
                });

            modelBuilder.Entity("backend.Models.Entities.ResourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ResourceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 728, DateTimeKind.Local).AddTicks(9270),
                            Name = "Dropin-skrivbord"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 728, DateTimeKind.Local).AddTicks(9570),
                            Name = "Mötesrum"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 728, DateTimeKind.Local).AddTicks(9580),
                            Name = "VR-headset"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 9, 11, 34, 44, 728, DateTimeKind.Local).AddTicks(9580),
                            Name = "AI-server"
                        });
                });

            modelBuilder.Entity("backend.Models.Booking", b =>
                {
                    b.HasOne("backend.Models.Entities.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("backend.Models.Entities.Resource", b =>
                {
                    b.HasOne("backend.Models.Entities.ResourceType", "ResourceType")
                        .WithMany()
                        .HasForeignKey("ResourceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResourceType");
                });
#pragma warning restore 612, 618
        }
    }
}
